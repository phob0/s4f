generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Gym {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  address   String    @db.VarChar(255)
  status    GymStatus @default(OPEN)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  tasks     Task[]
}

model Task {
  id          Int            @id @default(autoincrement())
  name        String         @db.VarChar(255)
  description String         @db.LongText
  status      TaskStatus     @default(NEW)
  gymID       Int
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  gym         Gym            @relation(fields: [gymID], references: [id])
  users       TasksOnUsers[]

  @@index([gymID], map: "Task_gymID_fkey")
}

model User {
  id        Int            @id @default(autoincrement())
  address   String         @unique @db.VarChar(255)
  expiresAt DateTime       @default(now())
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  // signature String         @db.VarChar(255)
  tasks     TasksOnUsers[]
  rewards   Reward[]
}

model Reward {
  id          Int            @id @default(autoincrement())
  status      RewardStatus     @default(CURRENT)
  userID       Int
  gymID       Int
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  user      User       @relation(fields: [userID], references: [id])

  @@index([userID], map: "Reward_userID_fkey")
  @@index([gymID], map: "Reward_gymID_fkey")
}

model TasksOnUsers {
  id        Int        @id @default(autoincrement())
  userID    Int
  taskID    Int
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  status    TaskStatus @default(NEW)
  task      Task       @relation(fields: [taskID], references: [id])
  user      User       @relation(fields: [userID], references: [id])

  @@index([taskID], map: "TasksOnUsers_taskID_fkey")
  @@index([userID], map: "TasksOnUsers_userID_fkey")
}

enum TaskStatus {
  NEW
  STARTED
  FINISHED
}

enum GymStatus {
  OPEN
  COMMING_SOON
}

enum RewardStatus {
  CURRENT
  PREVIOUS
}
